generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  role        String
  locationId  Int
  location    Location @relation(fields: [locationId], references: [id])
  name        String
  email       String   @unique
  password    String
  calls       Call[]
}

model Location {
  id    Int    @id @default(autoincrement())
  name  String
  address String?
  users User[]
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  contact String?
  history Json?
  calls   Call[]
}

model Call {
  id              Int      @id @default(autoincrement())
  phoneNumber     String   @default("UNKNOWN")
  callerName      String?
  callType        String   @default("INCOMING")
  timestamp       DateTime @default(now())
  duration        Int      @default(0)
  status          String
  routedTo        String?
  routingRuleId   Int?
  routedToUserId  Int?
  customerId      Int?
  metadata        Json?
  user            User?    @relation(fields: [routedToUserId], references: [id])
  customer        Customer? @relation(fields: [customerId], references: [id])
  routingRule     RoutingRule? @relation(fields: [routingRuleId], references: [id])
  metrics         Metric[]
  @@index([timestamp])
  @@index([phoneNumber])
}

model RoutingRule {
  id          Int      @id @default(autoincrement())
  name        String
  conditions  Json
  action      Json
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  calls       Call[]
}

model Metric {
  id        Int      @id @default(autoincrement())
  type      String
  value     Float
  timestamp DateTime
  callId    Int
  call      Call     @relation(fields: [callId], references: [id])
}
