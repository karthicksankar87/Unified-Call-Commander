generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  role       String
  locationId Int
  name       String
  email      String   @unique
  password   String
  calls      Call[]
  location   Location @relation(fields: [locationId], references: [id])
}

model Location {
  id      Int     @id @default(autoincrement())
  name    String
  address String?
  users   User[]
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  contact String?
  history Json?
  calls   Call[]
}

model Call {
  id             Int          @id @default(autoincrement())
  timestamp      DateTime     @default(now())
  status         String
  routedToUserId Int?
  customerId     Int?
  callType       String       @default("INCOMING")
  callerName     String?
  location       String?
  duration       Int          @default(0)
  metadata       Json?
  phoneNumber    String       @default("UNKNOWN")
  routedTo       String?
  routingRuleId  Int?
  customer       Customer?    @relation(fields: [customerId], references: [id])
  user           User?        @relation(fields: [routedToUserId], references: [id])
  routingRule    RoutingRule? @relation(fields: [routingRuleId], references: [id])
  metrics        Metric[]

  @@index([timestamp])
  @@index([phoneNumber])
}

model RoutingRule {
  id         Int      @id @default(autoincrement())
  name       String
  conditions Json
  action     Json
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  calls      Call[]
}

model Metric {
  id        Int      @id @default(autoincrement())
  type      String
  value     Float
  timestamp DateTime
  callId    Int
  call      Call     @relation(fields: [callId], references: [id])
}
